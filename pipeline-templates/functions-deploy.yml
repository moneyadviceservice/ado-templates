jobs:
  - job: Deploy
    displayName: 'Deploy to $(functionAppName)'
    pool:
      vmImage: $(vmImageName)

    steps:
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Build Artifact'
        inputs:
          buildType: 'current'
          artifactName: 'drop'
          targetPath: '$(Pipeline.Workspace)/drop'
        
      - task: AzureFunctionApp@1
        displayName: 'Azure Function App Deploy: $(functionAppName)'
        condition: and(succeeded(), ne('${{ parameters.env }}', 'prod'))
        inputs:
          azureSubscription: $(subscription)
          appType: functionApp
          appName: $(functionAppName)
          package: '$(Pipeline.Workspace)/drop/${{ parameters.packagePath }}.zip'

      - task: AzureWebApp@1
        displayName: 'Deploy to Staging Slot'
        condition: and(succeeded() , eq('${{ parameters.env }}', 'prod'))
        inputs:
          azureSubscription: '$(subscription)'
          appType: functionApp
          appName: '$(functionAppName)'
          deployToSlotOrASE: true
          resourceGroupName: '$(resourceGroupName)'
          slotName: '$(slotName)'
          package: '$(Pipeline.Workspace)/drop/${{ parameters.packagePath }}.zip'
          # runtimeStack: 'DOTNETCORE|8.0'

      - task: AzureAppServiceManage@0
        displayName: 'Swap to Production slot'
        condition: and(succeeded() , eq('${{ parameters.env }}', 'prod'))
        inputs:
          azureSubscription: '$(subscription)'
          appType: functionApp
          WebAppName: '$(functionAppName)'
          ResourceGroupName: '$(resourceGroupName)'
          SourceSlot: '$(slotName)'
          SwapWithProduction: true